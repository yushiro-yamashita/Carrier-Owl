env:
  PYTHON_VERSION: '3.10'
  POETRY_VERSION: '1.5.1'

name: Carrier Owl

on:
  schedule:
    # github actions のデフォルトの time zone が UTC なので、日本時間 - 9時間 した値を書く
    - cron:  '0 22 * * *'
  workflow_dispatch:
  
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install pandoc
        uses: pandoc/actions/setup@v1
        with:
          version: 3.1

      - name: Cache poetry
        id: poetry-cache
        uses: actions/cache@v3
        with:
          path: /home/runner/.local
          key: ${{ runner.os }}-python${{ env.PYTHON_VERSION }}-poetry${{ env.POETRY_VERSION }}

      - name: Set a path for poetry
        if: steps.poetry-cache.outputs.cache-hit == 'true'
        run:
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache packages
        id: packages-cache
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/pypoetry
          key: ${{ runner.os }}-${{ github.job }}-packages-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-${{ github.job }}-packages-

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install poetry
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Resolve Dependencies
#         if: steps.packages-cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v3
        id: node_modules_cache_id
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        
      - name: Install node_modules
        run: |
          npm ci -no-audit
          
      - name: Run owl
        run: poetry run python src/slide_owl.py
        env:
          OPENAI_API: ${{ secrets.OPENAI_API }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          ECS_ID: ${{ secrets.ECS_ID }}
          ECS_PASSWORD: ${{ secrets.ECS_PASSWORD }}
          
